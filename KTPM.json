{
  "openapi": "3.1.0",
  "info": {
    "title": "KTPM API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "account",
      "description": "Account operations"
    },
    {
      "name": "customUser",
      "description": "CustomUser operations"
    },
    {
      "name": "owner",
      "description": "Owner operations"
    },
    {
      "name": "field",
      "description": "Field operations"
    },
    {
      "name": "subField",
      "description": "SubField operations"
    },
    {
      "name": "booking",
      "description": "Booking operations"
    },
    {
      "name": "review",
      "description": "Review operations"
    },
    {
      "name": "openingHours",
      "description": "OpeningHours operations"
    },
    {
      "name": "maintenanceSchedule",
      "description": "MaintenanceSchedule operations"
    }
  ],
  "components": {
    "schemas": {
      "Role": {
        "type": "string",
        "enum": [
          "ADMIN",
          "CUSTOMER",
          "OWNER"
        ]
      },
      "SubFieldStatus": {
        "type": "string",
        "enum": [
          "AVAILABLE",
          "MAINTENANCE",
          "CLOSED",
          "RESERVED"
        ]
      },
      "DayOfWeek": {
        "type": "string",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ]
      },
      "AccountScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "username",
          "password",
          "phone",
          "email",
          "dateOfBirth",
          "role"
        ]
      },
      "CustomUserScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "accountId"
        ]
      },
      "OwnerScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "ranking",
          "accountId"
        ]
      },
      "FieldScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "ranking",
          "location",
          "fieldDescription",
          "ownerId"
        ]
      },
      "SubFieldScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "ranking",
          "price",
          "status",
          "haveToPayFirst",
          "subfieldDescription",
          "unitOfTime",
          "fieldId"
        ]
      },
      "BookingScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "date",
          "beginTime",
          "endTime",
          "price",
          "payDate",
          "paymentMethod",
          "status",
          "customUserId",
          "subfieldId"
        ]
      },
      "ReviewScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "date",
          "rating",
          "text",
          "bookingId"
        ]
      },
      "OpeningHoursScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "dayOfWeek",
          "openTime",
          "closeTime",
          "isOpen",
          "fieldId"
        ]
      },
      "MaintenanceScheduleScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "startDate",
          "endDate",
          "reason",
          "status",
          "subfieldId"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "QueryMode": {
        "type": "string",
        "enum": [
          "default",
          "insensitive"
        ]
      },
      "NullsOrder": {
        "type": "string",
        "enum": [
          "first",
          "last"
        ]
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "owner": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Owner"
              }
            ]
          },
          "customUser": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUser"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "username",
          "password",
          "role"
        ]
      },
      "CustomUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "accountId": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            }
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "accountId",
          "account"
        ]
      },
      "Owner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accountId": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "accountId",
          "account"
        ]
      },
      "Field": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner"
          },
          "subFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubField"
            }
          },
          "openingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpeningHours"
            }
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "location",
          "ownerId",
          "owner"
        ]
      },
      "SubField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/Field"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            }
          },
          "maintenanceSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceSchedule"
            }
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "price",
          "status",
          "haveToPayFirst",
          "unitOfTime",
          "fieldId",
          "field"
        ]
      },
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUserId": {
            "type": "string"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUser"
          },
          "subfieldId": {
            "type": "string"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubField"
          },
          "review": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Review"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUserId",
          "customUser",
          "subfieldId",
          "subfield"
        ]
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "integer"
          },
          "text": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bookingId": {
            "type": "string"
          },
          "booking": {
            "$ref": "#/components/schemas/Booking"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "date",
          "rating",
          "bookingId",
          "booking"
        ]
      },
      "OpeningHours": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "openTime": {
            "type": "string"
          },
          "closeTime": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/Field"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "dayOfWeek",
          "openTime",
          "closeTime",
          "isOpen",
          "fieldId",
          "field"
        ]
      },
      "MaintenanceSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "subfieldId": {
            "type": "string"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubField"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "startDate",
          "endDate",
          "status",
          "subfieldId",
          "subfield"
        ]
      },
      "AccountWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumRoleFilter"
              },
              {
                "$ref": "#/components/schemas/Role"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "customUser": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "AccountOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "username": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "password": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerOrderByWithRelationInput"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserOrderByWithRelationInput"
          }
        }
      },
      "AccountWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumRoleFilter"
              },
              {
                "$ref": "#/components/schemas/Role"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "customUser": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "AccountScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumRoleWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/Role"
              }
            ]
          }
        }
      },
      "CustomUserWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomUserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomUserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomUserWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "account": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingListRelationFilter"
          }
        }
      },
      "CustomUserOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "accountId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "account": {
            "$ref": "#/components/schemas/AccountOrderByWithRelationInput"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingOrderByRelationAggregateInput"
          }
        }
      },
      "CustomUserWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomUserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomUserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomUserWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "account": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingListRelationFilter"
          }
        }
      },
      "CustomUserScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomUserScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomUserScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomUserScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "OwnerWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OwnerWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OwnerWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OwnerWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "account": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              }
            ]
          },
          "fields": {
            "$ref": "#/components/schemas/FieldListRelationFilter"
          }
        }
      },
      "OwnerOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "accountId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "account": {
            "$ref": "#/components/schemas/AccountOrderByWithRelationInput"
          },
          "fields": {
            "$ref": "#/components/schemas/FieldOrderByRelationAggregateInput"
          }
        }
      },
      "OwnerWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OwnerWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OwnerWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OwnerWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "account": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              }
            ]
          },
          "fields": {
            "$ref": "#/components/schemas/FieldListRelationFilter"
          }
        }
      },
      "OwnerScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OwnerScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OwnerScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OwnerScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "FieldWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              }
            ]
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldListRelationFilter"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursListRelationFilter"
          }
        }
      },
      "FieldOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "location": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "ownerId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerOrderByWithRelationInput"
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldOrderByRelationAggregateInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursOrderByRelationAggregateInput"
          }
        }
      },
      "FieldWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              }
            ]
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldListRelationFilter"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursListRelationFilter"
          }
        }
      },
      "FieldScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SubFieldWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloatFilter"
              },
              {
                "type": "number"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFilter"
              },
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "field": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/FieldWhereInput"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingListRelationFilter"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleListRelationFilter"
          }
        }
      },
      "SubFieldOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "price": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "status": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "haveToPayFirst": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "unitOfTime": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "fieldId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "field": {
            "$ref": "#/components/schemas/FieldOrderByWithRelationInput"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingOrderByRelationAggregateInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleOrderByRelationAggregateInput"
          }
        }
      },
      "SubFieldWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloatFilter"
              },
              {
                "type": "number"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFilter"
              },
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "field": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/FieldWhereInput"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingListRelationFilter"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleListRelationFilter"
          }
        }
      },
      "SubFieldScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloatWithAggregatesFilter"
              },
              {
                "type": "number"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "BookingWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloatFilter"
              },
              {
                "type": "number"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "customUser": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              }
            ]
          },
          "subfield": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SubFieldWhereInput"
              }
            ]
          },
          "review": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "BookingOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "date": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "beginTime": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "endTime": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "price": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "payDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "customUserId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "subfieldId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserOrderByWithRelationInput"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldOrderByWithRelationInput"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewOrderByWithRelationInput"
          }
        }
      },
      "BookingWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloatFilter"
              },
              {
                "type": "number"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "customUser": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              }
            ]
          },
          "subfield": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SubFieldWhereInput"
              }
            ]
          },
          "review": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "BookingScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloatWithAggregatesFilter"
              },
              {
                "type": "number"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ReviewWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReviewWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReviewWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "bookingId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "booking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/BookingWhereInput"
              }
            ]
          }
        }
      },
      "ReviewOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "date": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "rating": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "text": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "bookingId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "booking": {
            "$ref": "#/components/schemas/BookingOrderByWithRelationInput"
          }
        }
      },
      "ReviewWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "bookingId": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReviewWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReviewWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "booking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/BookingWhereInput"
              }
            ]
          }
        }
      },
      "ReviewScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "bookingId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "OpeningHoursWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpeningHoursWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumDayOfWeekFilter"
              },
              {
                "$ref": "#/components/schemas/DayOfWeek"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "field": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/FieldWhereInput"
              }
            ]
          }
        }
      },
      "OpeningHoursOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "openTime": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "closeTime": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "isOpen": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "fieldId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "field": {
            "$ref": "#/components/schemas/FieldOrderByWithRelationInput"
          }
        }
      },
      "OpeningHoursWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fieldId_dayOfWeek": {
            "$ref": "#/components/schemas/OpeningHoursFieldIdDayOfWeekCompoundUniqueInput"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpeningHoursWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumDayOfWeekFilter"
              },
              {
                "$ref": "#/components/schemas/DayOfWeek"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "field": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/FieldWhereInput"
              }
            ]
          }
        }
      },
      "OpeningHoursScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpeningHoursScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumDayOfWeekWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/DayOfWeek"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfield": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SubFieldWhereInput"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "startDate": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "endDate": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "subfieldId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldOrderByWithRelationInput"
          }
        }
      },
      "MaintenanceScheduleWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
                }
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfield": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SubFieldWhereInput"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "AccountCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerCreateNestedOneWithoutAccountInput"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserCreateNestedOneWithoutAccountInput"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AccountUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerUpdateOneWithoutAccountNestedInput"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserUpdateOneWithoutAccountNestedInput"
          }
        }
      },
      "AccountCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AccountUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CustomUserCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "account": {
            "$ref": "#/components/schemas/AccountCreateNestedOneWithoutCustomUserInput"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingCreateNestedManyWithoutCustomUserInput"
          }
        },
        "required": [
          "account"
        ]
      },
      "CustomUserUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "account": {
            "$ref": "#/components/schemas/AccountUpdateOneRequiredWithoutCustomUserNestedInput"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUpdateManyWithoutCustomUserNestedInput"
          }
        }
      },
      "CustomUserCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "accountId": {
            "type": "string"
          }
        },
        "required": [
          "accountId"
        ]
      },
      "CustomUserUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "OwnerCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "account": {
            "$ref": "#/components/schemas/AccountCreateNestedOneWithoutOwnerInput"
          },
          "fields": {
            "$ref": "#/components/schemas/FieldCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "account"
        ]
      },
      "OwnerUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "account": {
            "$ref": "#/components/schemas/AccountUpdateOneRequiredWithoutOwnerNestedInput"
          },
          "fields": {
            "$ref": "#/components/schemas/FieldUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "OwnerCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accountId": {
            "type": "string"
          }
        },
        "required": [
          "accountId"
        ]
      },
      "OwnerUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "FieldCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerCreateNestedOneWithoutFieldsInput"
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldCreateNestedManyWithoutFieldInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursCreateNestedManyWithoutFieldInput"
          }
        },
        "required": [
          "location",
          "owner"
        ]
      },
      "FieldUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerUpdateOneRequiredWithoutFieldsNestedInput"
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldUpdateManyWithoutFieldNestedInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursUpdateManyWithoutFieldNestedInput"
          }
        }
      },
      "FieldCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          }
        },
        "required": [
          "location",
          "ownerId"
        ]
      },
      "FieldUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "SubFieldCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/FieldCreateNestedOneWithoutSubFieldsInput"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingCreateNestedManyWithoutSubfieldInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateNestedManyWithoutSubfieldInput"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime",
          "field"
        ]
      },
      "SubFieldUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "field": {
            "$ref": "#/components/schemas/FieldUpdateOneRequiredWithoutSubFieldsNestedInput"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUpdateManyWithoutSubfieldNestedInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyWithoutSubfieldNestedInput"
          }
        }
      },
      "SubFieldCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime",
          "fieldId"
        ]
      },
      "SubFieldUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BookingCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserCreateNestedOneWithoutBookingsInput"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldCreateNestedOneWithoutBookingsInput"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewCreateNestedOneWithoutBookingInput"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUser",
          "subfield"
        ]
      },
      "BookingUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserUpdateOneRequiredWithoutBookingsNestedInput"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldUpdateOneRequiredWithoutBookingsNestedInput"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewUpdateOneWithoutBookingNestedInput"
          }
        }
      },
      "BookingCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUserId": {
            "type": "string"
          },
          "subfieldId": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUserId",
          "subfieldId"
        ]
      },
      "BookingUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ReviewCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "integer"
          },
          "text": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "booking": {
            "$ref": "#/components/schemas/BookingCreateNestedOneWithoutReviewInput"
          }
        },
        "required": [
          "rating",
          "booking"
        ]
      },
      "ReviewUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "booking": {
            "$ref": "#/components/schemas/BookingUpdateOneRequiredWithoutReviewNestedInput"
          }
        }
      },
      "ReviewCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "integer"
          },
          "text": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bookingId": {
            "type": "string"
          }
        },
        "required": [
          "rating",
          "bookingId"
        ]
      },
      "ReviewUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "OpeningHoursCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "openTime": {
            "type": "string"
          },
          "closeTime": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          },
          "field": {
            "$ref": "#/components/schemas/FieldCreateNestedOneWithoutOpeningHoursInput"
          }
        },
        "required": [
          "dayOfWeek",
          "openTime",
          "closeTime",
          "field"
        ]
      },
      "OpeningHoursUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/EnumDayOfWeekFieldUpdateOperationsInput"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "field": {
            "$ref": "#/components/schemas/FieldUpdateOneRequiredWithoutOpeningHoursNestedInput"
          }
        }
      },
      "OpeningHoursCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "openTime": {
            "type": "string"
          },
          "closeTime": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "string"
          }
        },
        "required": [
          "dayOfWeek",
          "openTime",
          "closeTime",
          "fieldId"
        ]
      },
      "OpeningHoursUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/EnumDayOfWeekFieldUpdateOperationsInput"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldCreateNestedOneWithoutMaintenanceSchedulesInput"
          }
        },
        "required": [
          "startDate",
          "endDate",
          "status",
          "subfield"
        ]
      },
      "MaintenanceScheduleUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldUpdateOneRequiredWithoutMaintenanceSchedulesNestedInput"
          }
        }
      },
      "MaintenanceScheduleCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "subfieldId": {
            "type": "string"
          }
        },
        "required": [
          "startDate",
          "endDate",
          "status",
          "subfieldId"
        ]
      },
      "MaintenanceScheduleUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "StringFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          }
        }
      },
      "DateTimeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeFilter"
              }
            ]
          }
        }
      },
      "DateTimeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "StringNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "EnumRoleFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/Role"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/NestedEnumRoleFilter"
              }
            ]
          }
        }
      },
      "OwnerNullableScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              }
            ]
          },
          "isNot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              }
            ]
          }
        }
      },
      "CustomUserNullableScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              }
            ]
          },
          "isNot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              }
            ]
          }
        }
      },
      "SortOrderInput": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "nulls": {
            "$ref": "#/components/schemas/NullsOrder"
          }
        },
        "required": [
          "sort"
        ]
      },
      "StringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          }
        }
      },
      "DateTimeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          }
        }
      },
      "DateTimeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          }
        }
      },
      "StringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          }
        }
      },
      "EnumRoleWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/Role"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/NestedEnumRoleWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumRoleFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumRoleFilter"
          }
        }
      },
      "AccountScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/AccountWhereInput"
          }
        }
      },
      "BookingListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/BookingWhereInput"
          }
        }
      },
      "BookingOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "FieldListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/FieldWhereInput"
          }
        }
      },
      "FieldOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "OwnerScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          }
        }
      },
      "SubFieldListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          }
        }
      },
      "OpeningHoursListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          }
        }
      },
      "SubFieldOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "OpeningHoursOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "FloatFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "number"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lt": {
            "type": "number"
          },
          "lte": {
            "type": "number"
          },
          "gt": {
            "type": "number"
          },
          "gte": {
            "type": "number"
          },
          "not": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/NestedFloatFilter"
              }
            ]
          }
        }
      },
      "EnumSubFieldStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumSubFieldStatusFilter"
              }
            ]
          }
        }
      },
      "BoolFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolFilter"
              }
            ]
          }
        }
      },
      "FieldScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/FieldWhereInput"
          }
        }
      },
      "MaintenanceScheduleListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          }
        }
      },
      "MaintenanceScheduleOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "FloatWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "number"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lt": {
            "type": "number"
          },
          "lte": {
            "type": "number"
          },
          "gt": {
            "type": "number"
          },
          "gte": {
            "type": "number"
          },
          "not": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/NestedFloatWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          }
        }
      },
      "EnumSubFieldStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumSubFieldStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumSubFieldStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumSubFieldStatusFilter"
          }
        }
      },
      "BoolWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          }
        }
      },
      "CustomUserScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          }
        }
      },
      "SubFieldScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          }
        }
      },
      "ReviewNullableScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              }
            ]
          },
          "isNot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              }
            ]
          }
        }
      },
      "IntFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          }
        }
      },
      "BookingScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/BookingWhereInput"
          }
        }
      },
      "IntWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntFilter"
          }
        }
      },
      "EnumDayOfWeekFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/NestedEnumDayOfWeekFilter"
              }
            ]
          }
        }
      },
      "OpeningHoursFieldIdDayOfWeekCompoundUniqueInput": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          }
        },
        "required": [
          "fieldId",
          "dayOfWeek"
        ]
      },
      "EnumDayOfWeekWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/NestedEnumDayOfWeekWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumDayOfWeekFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumDayOfWeekFilter"
          }
        }
      },
      "OwnerCreateNestedOneWithoutAccountInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OwnerCreateOrConnectWithoutAccountInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          }
        }
      },
      "CustomUserCreateNestedOneWithoutAccountInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CustomUserCreateOrConnectWithoutAccountInput"
          },
          "connect": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          }
        }
      },
      "OwnerUncheckedCreateNestedOneWithoutAccountInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OwnerCreateOrConnectWithoutAccountInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          }
        }
      },
      "CustomUserUncheckedCreateNestedOneWithoutAccountInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CustomUserCreateOrConnectWithoutAccountInput"
          },
          "connect": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          }
        }
      },
      "StringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string"
          }
        }
      },
      "DateTimeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NullableDateTimeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "NullableStringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "EnumRoleFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/Role"
          }
        }
      },
      "OwnerUpdateOneWithoutAccountNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OwnerCreateOrConnectWithoutAccountInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/OwnerUpsertWithoutAccountInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerUpdateToOneWithWhereWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUpdateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedUpdateWithoutAccountInput"
              }
            ]
          }
        }
      },
      "CustomUserUpdateOneWithoutAccountNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CustomUserCreateOrConnectWithoutAccountInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/CustomUserUpsertWithoutAccountInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserUpdateToOneWithWhereWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUpdateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedUpdateWithoutAccountInput"
              }
            ]
          }
        }
      },
      "OwnerUncheckedUpdateOneWithoutAccountNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OwnerCreateOrConnectWithoutAccountInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/OwnerUpsertWithoutAccountInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerUpdateToOneWithWhereWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUpdateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedUpdateWithoutAccountInput"
              }
            ]
          }
        }
      },
      "CustomUserUncheckedUpdateOneWithoutAccountNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CustomUserCreateOrConnectWithoutAccountInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/CustomUserUpsertWithoutAccountInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserUpdateToOneWithWhereWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUpdateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedUpdateWithoutAccountInput"
              }
            ]
          }
        }
      },
      "AccountCreateNestedOneWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutCustomUserInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/AccountCreateOrConnectWithoutCustomUserInput"
          },
          "connect": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          }
        }
      },
      "BookingCreateNestedManyWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateOrConnectWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateOrConnectWithoutCustomUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BookingCreateManyCustomUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BookingUncheckedCreateNestedManyWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateOrConnectWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateOrConnectWithoutCustomUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BookingCreateManyCustomUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "AccountUpdateOneRequiredWithoutCustomUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutCustomUserInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/AccountCreateOrConnectWithoutCustomUserInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/AccountUpsertWithoutCustomUserInput"
          },
          "connect": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateToOneWithWhereWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutCustomUserInput"
              }
            ]
          }
        }
      },
      "BookingUpdateManyWithoutCustomUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateOrConnectWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateOrConnectWithoutCustomUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpsertWithWhereUniqueWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpsertWithWhereUniqueWithoutCustomUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BookingCreateManyCustomUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithWhereUniqueWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpdateWithWhereUniqueWithoutCustomUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateManyWithWhereWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpdateManyWithWhereWithoutCustomUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BookingUncheckedUpdateManyWithoutCustomUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateOrConnectWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateOrConnectWithoutCustomUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpsertWithWhereUniqueWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpsertWithWhereUniqueWithoutCustomUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BookingCreateManyCustomUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithWhereUniqueWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpdateWithWhereUniqueWithoutCustomUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateManyWithWhereWithoutCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpdateManyWithWhereWithoutCustomUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "AccountCreateNestedOneWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutOwnerInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/AccountCreateOrConnectWithoutOwnerInput"
          },
          "connect": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          }
        }
      },
      "FieldCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FieldCreateManyOwnerInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "FieldUncheckedCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FieldCreateManyOwnerInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "AccountUpdateOneRequiredWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutOwnerInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/AccountCreateOrConnectWithoutOwnerInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/AccountUpsertWithoutOwnerInput"
          },
          "connect": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateToOneWithWhereWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutOwnerInput"
              }
            ]
          }
        }
      },
      "FieldUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FieldCreateManyOwnerInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "FieldUncheckedUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FieldCreateManyOwnerInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "OwnerCreateNestedOneWithoutFieldsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutFieldsInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutFieldsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OwnerCreateOrConnectWithoutFieldsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          }
        }
      },
      "SubFieldCreateNestedManyWithoutFieldInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutFieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SubFieldCreateManyFieldInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "OpeningHoursCreateNestedManyWithoutFieldInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateOrConnectWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateOrConnectWithoutFieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/OpeningHoursCreateManyFieldInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SubFieldUncheckedCreateNestedManyWithoutFieldInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutFieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SubFieldCreateManyFieldInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "OpeningHoursUncheckedCreateNestedManyWithoutFieldInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateOrConnectWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateOrConnectWithoutFieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/OpeningHoursCreateManyFieldInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "OwnerUpdateOneRequiredWithoutFieldsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutFieldsInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutFieldsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OwnerCreateOrConnectWithoutFieldsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/OwnerUpsertWithoutFieldsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerUpdateToOneWithWhereWithoutFieldsInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUpdateWithoutFieldsInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedUpdateWithoutFieldsInput"
              }
            ]
          }
        }
      },
      "SubFieldUpdateManyWithoutFieldNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutFieldInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpsertWithWhereUniqueWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUpsertWithWhereUniqueWithoutFieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SubFieldCreateManyFieldInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithWhereUniqueWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUpdateWithWhereUniqueWithoutFieldInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateManyWithWhereWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUpdateManyWithWhereWithoutFieldInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "OpeningHoursUpdateManyWithoutFieldNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateOrConnectWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateOrConnectWithoutFieldInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpsertWithWhereUniqueWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUpsertWithWhereUniqueWithoutFieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/OpeningHoursCreateManyFieldInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpdateWithWhereUniqueWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUpdateWithWhereUniqueWithoutFieldInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpdateManyWithWhereWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUpdateManyWithWhereWithoutFieldInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SubFieldUncheckedUpdateManyWithoutFieldNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutFieldInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpsertWithWhereUniqueWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUpsertWithWhereUniqueWithoutFieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SubFieldCreateManyFieldInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithWhereUniqueWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUpdateWithWhereUniqueWithoutFieldInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateManyWithWhereWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldUpdateManyWithWhereWithoutFieldInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "OpeningHoursUncheckedUpdateManyWithoutFieldNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateOrConnectWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateOrConnectWithoutFieldInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpsertWithWhereUniqueWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUpsertWithWhereUniqueWithoutFieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/OpeningHoursCreateManyFieldInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpdateWithWhereUniqueWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUpdateWithWhereUniqueWithoutFieldInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpdateManyWithWhereWithoutFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursUpdateManyWithWhereWithoutFieldInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "FieldCreateNestedOneWithoutSubFieldsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutSubFieldsInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutSubFieldsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/FieldCreateOrConnectWithoutSubFieldsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          }
        }
      },
      "BookingCreateNestedManyWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateOrConnectWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateOrConnectWithoutSubfieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BookingCreateManySubfieldInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "MaintenanceScheduleCreateNestedManyWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateOrConnectWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateOrConnectWithoutSubfieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateManySubfieldInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BookingUncheckedCreateNestedManyWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateOrConnectWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateOrConnectWithoutSubfieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BookingCreateManySubfieldInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "MaintenanceScheduleUncheckedCreateNestedManyWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateOrConnectWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateOrConnectWithoutSubfieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateManySubfieldInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "FloatFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "number"
          },
          "increment": {
            "type": "number"
          },
          "decrement": {
            "type": "number"
          },
          "multiply": {
            "type": "number"
          },
          "divide": {
            "type": "number"
          }
        }
      },
      "EnumSubFieldStatusFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/SubFieldStatus"
          }
        }
      },
      "BoolFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean"
          }
        }
      },
      "FieldUpdateOneRequiredWithoutSubFieldsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutSubFieldsInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutSubFieldsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/FieldCreateOrConnectWithoutSubFieldsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/FieldUpsertWithoutSubFieldsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateToOneWithWhereWithoutSubFieldsInput"
              },
              {
                "$ref": "#/components/schemas/FieldUpdateWithoutSubFieldsInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateWithoutSubFieldsInput"
              }
            ]
          }
        }
      },
      "BookingUpdateManyWithoutSubfieldNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateOrConnectWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateOrConnectWithoutSubfieldInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpsertWithWhereUniqueWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpsertWithWhereUniqueWithoutSubfieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BookingCreateManySubfieldInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithWhereUniqueWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpdateWithWhereUniqueWithoutSubfieldInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateManyWithWhereWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpdateManyWithWhereWithoutSubfieldInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "MaintenanceScheduleUpdateManyWithoutSubfieldNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateOrConnectWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateOrConnectWithoutSubfieldInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpsertWithWhereUniqueWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUpsertWithWhereUniqueWithoutSubfieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateManySubfieldInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateWithWhereUniqueWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUpdateWithWhereUniqueWithoutSubfieldInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyWithWhereWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyWithWhereWithoutSubfieldInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BookingUncheckedUpdateManyWithoutSubfieldNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateOrConnectWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateOrConnectWithoutSubfieldInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpsertWithWhereUniqueWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpsertWithWhereUniqueWithoutSubfieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BookingCreateManySubfieldInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithWhereUniqueWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpdateWithWhereUniqueWithoutSubfieldInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateManyWithWhereWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingUpdateManyWithWhereWithoutSubfieldInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "MaintenanceScheduleUncheckedUpdateManyWithoutSubfieldNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
                }
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateOrConnectWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateOrConnectWithoutSubfieldInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpsertWithWhereUniqueWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUpsertWithWhereUniqueWithoutSubfieldInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateManySubfieldInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateWithWhereUniqueWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUpdateWithWhereUniqueWithoutSubfieldInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyWithWhereWithoutSubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyWithWhereWithoutSubfieldInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "CustomUserCreateNestedOneWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutBookingsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CustomUserCreateOrConnectWithoutBookingsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          }
        }
      },
      "SubFieldCreateNestedOneWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutBookingsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutBookingsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          }
        }
      },
      "ReviewCreateNestedOneWithoutBookingInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewCreateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedCreateWithoutBookingInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ReviewCreateOrConnectWithoutBookingInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          }
        }
      },
      "ReviewUncheckedCreateNestedOneWithoutBookingInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewCreateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedCreateWithoutBookingInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ReviewCreateOrConnectWithoutBookingInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          }
        }
      },
      "CustomUserUpdateOneRequiredWithoutBookingsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutBookingsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CustomUserCreateOrConnectWithoutBookingsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/CustomUserUpsertWithoutBookingsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserUpdateToOneWithWhereWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUpdateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedUpdateWithoutBookingsInput"
              }
            ]
          }
        }
      },
      "SubFieldUpdateOneRequiredWithoutBookingsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutBookingsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutBookingsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/SubFieldUpsertWithoutBookingsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateToOneWithWhereWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateWithoutBookingsInput"
              }
            ]
          }
        }
      },
      "ReviewUpdateOneWithoutBookingNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewCreateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedCreateWithoutBookingInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ReviewCreateOrConnectWithoutBookingInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ReviewUpsertWithoutBookingInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewUpdateToOneWithWhereWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUpdateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedUpdateWithoutBookingInput"
              }
            ]
          }
        }
      },
      "ReviewUncheckedUpdateOneWithoutBookingNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewCreateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedCreateWithoutBookingInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ReviewCreateOrConnectWithoutBookingInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ReviewUpsertWithoutBookingInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ReviewWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewUpdateToOneWithWhereWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUpdateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedUpdateWithoutBookingInput"
              }
            ]
          }
        }
      },
      "BookingCreateNestedOneWithoutReviewInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutReviewInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutReviewInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/BookingCreateOrConnectWithoutReviewInput"
          },
          "connect": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          }
        }
      },
      "IntFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "integer"
          },
          "increment": {
            "type": "integer"
          },
          "decrement": {
            "type": "integer"
          },
          "multiply": {
            "type": "integer"
          },
          "divide": {
            "type": "integer"
          }
        }
      },
      "BookingUpdateOneRequiredWithoutReviewNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutReviewInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutReviewInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/BookingCreateOrConnectWithoutReviewInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/BookingUpsertWithoutReviewInput"
          },
          "connect": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateToOneWithWhereWithoutReviewInput"
              },
              {
                "$ref": "#/components/schemas/BookingUpdateWithoutReviewInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateWithoutReviewInput"
              }
            ]
          }
        }
      },
      "FieldCreateNestedOneWithoutOpeningHoursInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOpeningHoursInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOpeningHoursInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOpeningHoursInput"
          },
          "connect": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          }
        }
      },
      "EnumDayOfWeekFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/DayOfWeek"
          }
        }
      },
      "FieldUpdateOneRequiredWithoutOpeningHoursNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOpeningHoursInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOpeningHoursInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/FieldCreateOrConnectWithoutOpeningHoursInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/FieldUpsertWithoutOpeningHoursInput"
          },
          "connect": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateToOneWithWhereWithoutOpeningHoursInput"
              },
              {
                "$ref": "#/components/schemas/FieldUpdateWithoutOpeningHoursInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateWithoutOpeningHoursInput"
              }
            ]
          }
        }
      },
      "SubFieldCreateNestedOneWithoutMaintenanceSchedulesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutMaintenanceSchedulesInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutMaintenanceSchedulesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutMaintenanceSchedulesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          }
        }
      },
      "SubFieldUpdateOneRequiredWithoutMaintenanceSchedulesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutMaintenanceSchedulesInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutMaintenanceSchedulesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SubFieldCreateOrConnectWithoutMaintenanceSchedulesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/SubFieldUpsertWithoutMaintenanceSchedulesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateToOneWithWhereWithoutMaintenanceSchedulesInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithoutMaintenanceSchedulesInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateWithoutMaintenanceSchedulesInput"
              }
            ]
          }
        }
      },
      "NestedStringFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          }
        }
      },
      "NestedDateTimeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeFilter"
              }
            ]
          }
        }
      },
      "NestedDateTimeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedStringNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedEnumRoleFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/Role"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/NestedEnumRoleFilter"
              }
            ]
          }
        }
      },
      "NestedStringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          }
        }
      },
      "NestedIntFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          }
        }
      },
      "NestedDateTimeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          }
        }
      },
      "NestedDateTimeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          }
        }
      },
      "NestedIntNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            ]
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedStringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          }
        }
      },
      "NestedEnumRoleWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/Role"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/NestedEnumRoleWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumRoleFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumRoleFilter"
          }
        }
      },
      "NestedFloatFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "number"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lt": {
            "type": "number"
          },
          "lte": {
            "type": "number"
          },
          "gt": {
            "type": "number"
          },
          "gte": {
            "type": "number"
          },
          "not": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/NestedFloatFilter"
              }
            ]
          }
        }
      },
      "NestedEnumSubFieldStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumSubFieldStatusFilter"
              }
            ]
          }
        }
      },
      "NestedBoolFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolFilter"
              }
            ]
          }
        }
      },
      "NestedFloatWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "number"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lt": {
            "type": "number"
          },
          "lte": {
            "type": "number"
          },
          "gt": {
            "type": "number"
          },
          "gte": {
            "type": "number"
          },
          "not": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/NestedFloatWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          }
        }
      },
      "NestedEnumSubFieldStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumSubFieldStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumSubFieldStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumSubFieldStatusFilter"
          }
        }
      },
      "NestedBoolWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          }
        }
      },
      "NestedIntWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntFilter"
          }
        }
      },
      "NestedEnumDayOfWeekFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/NestedEnumDayOfWeekFilter"
              }
            ]
          }
        }
      },
      "NestedEnumDayOfWeekWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/NestedEnumDayOfWeekWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumDayOfWeekFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumDayOfWeekFilter"
          }
        }
      },
      "OwnerCreateWithoutAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "fields": {
            "$ref": "#/components/schemas/FieldCreateNestedManyWithoutOwnerInput"
          }
        }
      },
      "OwnerUncheckedCreateWithoutAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "fields": {
            "$ref": "#/components/schemas/FieldUncheckedCreateNestedManyWithoutOwnerInput"
          }
        }
      },
      "OwnerCreateOrConnectWithoutAccountInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutAccountInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "CustomUserCreateWithoutAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingCreateNestedManyWithoutCustomUserInput"
          }
        }
      },
      "CustomUserUncheckedCreateWithoutAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUncheckedCreateNestedManyWithoutCustomUserInput"
          }
        }
      },
      "CustomUserCreateOrConnectWithoutAccountInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutAccountInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "OwnerUpsertWithoutAccountInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerUpdateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedUpdateWithoutAccountInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "OwnerUpdateToOneWithWhereWithoutAccountInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerUpdateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedUpdateWithoutAccountInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "OwnerUpdateWithoutAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "fields": {
            "$ref": "#/components/schemas/FieldUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "OwnerUncheckedUpdateWithoutAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "fields": {
            "$ref": "#/components/schemas/FieldUncheckedUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "CustomUserUpsertWithoutAccountInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserUpdateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedUpdateWithoutAccountInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutAccountInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "CustomUserUpdateToOneWithWhereWithoutAccountInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserUpdateWithoutAccountInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedUpdateWithoutAccountInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomUserUpdateWithoutAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUpdateManyWithoutCustomUserNestedInput"
          }
        }
      },
      "CustomUserUncheckedUpdateWithoutAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUncheckedUpdateManyWithoutCustomUserNestedInput"
          }
        }
      },
      "AccountCreateWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerCreateNestedOneWithoutAccountInput"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AccountUncheckedCreateWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerUncheckedCreateNestedOneWithoutAccountInput"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AccountCreateOrConnectWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutCustomUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BookingCreateWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldCreateNestedOneWithoutBookingsInput"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewCreateNestedOneWithoutBookingInput"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "subfield"
        ]
      },
      "BookingUncheckedCreateWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "subfieldId": {
            "type": "string"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewUncheckedCreateNestedOneWithoutBookingInput"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "subfieldId"
        ]
      },
      "BookingCreateOrConnectWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BookingCreateManyCustomUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateManyCustomUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateManyCustomUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountUpsertWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutCustomUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutCustomUserInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "AccountUpdateToOneWithWhereWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutCustomUserInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountUpdateWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerUpdateOneWithoutAccountNestedInput"
          }
        }
      },
      "AccountUncheckedUpdateWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerUncheckedUpdateOneWithoutAccountNestedInput"
          }
        }
      },
      "BookingUpsertWithWhereUniqueWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateWithoutCustomUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutCustomUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "BookingUpdateWithWhereUniqueWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithoutCustomUserInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateWithoutCustomUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BookingUpdateManyWithWhereWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateManyWithoutCustomUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BookingScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloatFilter"
              },
              {
                "type": "number"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "AccountCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserCreateNestedOneWithoutAccountInput"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AccountUncheckedCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserUncheckedCreateNestedOneWithoutAccountInput"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AccountCreateOrConnectWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "FieldCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldCreateNestedManyWithoutFieldInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursCreateNestedManyWithoutFieldInput"
          }
        },
        "required": [
          "location"
        ]
      },
      "FieldUncheckedCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldUncheckedCreateNestedManyWithoutFieldInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursUncheckedCreateNestedManyWithoutFieldInput"
          }
        },
        "required": [
          "location"
        ]
      },
      "FieldCreateOrConnectWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "FieldCreateManyOwnerInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateManyOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateManyOwnerInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountUpsertWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutOwnerInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutOwnerInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "AccountUpdateToOneWithWhereWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserUpdateOneWithoutAccountNestedInput"
          }
        }
      },
      "AccountUncheckedUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "$ref": "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserUncheckedUpdateOneWithoutAccountNestedInput"
          }
        }
      },
      "FieldUpsertWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateWithoutOwnerInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "FieldUpdateWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "FieldUpdateManyWithWhereWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateManyWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "FieldScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "OwnerCreateWithoutFieldsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "account": {
            "$ref": "#/components/schemas/AccountCreateNestedOneWithoutOwnerInput"
          }
        },
        "required": [
          "account"
        ]
      },
      "OwnerUncheckedCreateWithoutFieldsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accountId": {
            "type": "string"
          }
        },
        "required": [
          "accountId"
        ]
      },
      "OwnerCreateOrConnectWithoutFieldsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutFieldsInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutFieldsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SubFieldCreateWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingCreateNestedManyWithoutSubfieldInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateNestedManyWithoutSubfieldInput"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime"
        ]
      },
      "SubFieldUncheckedCreateWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUncheckedCreateNestedManyWithoutSubfieldInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateNestedManyWithoutSubfieldInput"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime"
        ]
      },
      "SubFieldCreateOrConnectWithoutFieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SubFieldCreateManyFieldInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateManyFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateManyFieldInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "OpeningHoursCreateWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "openTime": {
            "type": "string"
          },
          "closeTime": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          }
        },
        "required": [
          "dayOfWeek",
          "openTime",
          "closeTime"
        ]
      },
      "OpeningHoursUncheckedCreateWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "openTime": {
            "type": "string"
          },
          "closeTime": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          }
        },
        "required": [
          "dayOfWeek",
          "openTime",
          "closeTime"
        ]
      },
      "OpeningHoursCreateOrConnectWithoutFieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "OpeningHoursCreateManyFieldInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateManyFieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateManyFieldInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "OwnerUpsertWithoutFieldsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerUpdateWithoutFieldsInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedUpdateWithoutFieldsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateWithoutFieldsInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedCreateWithoutFieldsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "OwnerUpdateToOneWithWhereWithoutFieldsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerUpdateWithoutFieldsInput"
              },
              {
                "$ref": "#/components/schemas/OwnerUncheckedUpdateWithoutFieldsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "OwnerUpdateWithoutFieldsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "account": {
            "$ref": "#/components/schemas/AccountUpdateOneRequiredWithoutOwnerNestedInput"
          }
        }
      },
      "OwnerUncheckedUpdateWithoutFieldsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SubFieldUpsertWithWhereUniqueWithoutFieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithoutFieldInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateWithoutFieldInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutFieldInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutFieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "SubFieldUpdateWithWhereUniqueWithoutFieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithoutFieldInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateWithoutFieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SubFieldUpdateManyWithWhereWithoutFieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateManyWithoutFieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SubFieldScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubFieldScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloatFilter"
              },
              {
                "type": "number"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFilter"
              },
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "OpeningHoursUpsertWithWhereUniqueWithoutFieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpdateWithoutFieldInput"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedUpdateWithoutFieldInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateWithoutFieldInput"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedCreateWithoutFieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "OpeningHoursUpdateWithWhereUniqueWithoutFieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpdateWithoutFieldInput"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedUpdateWithoutFieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "OpeningHoursUpdateManyWithWhereWithoutFieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursUncheckedUpdateManyWithoutFieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "OpeningHoursScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumDayOfWeekFilter"
              },
              {
                "$ref": "#/components/schemas/DayOfWeek"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "FieldCreateWithoutSubFieldsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerCreateNestedOneWithoutFieldsInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursCreateNestedManyWithoutFieldInput"
          }
        },
        "required": [
          "location",
          "owner"
        ]
      },
      "FieldUncheckedCreateWithoutSubFieldsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursUncheckedCreateNestedManyWithoutFieldInput"
          }
        },
        "required": [
          "location",
          "ownerId"
        ]
      },
      "FieldCreateOrConnectWithoutSubFieldsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutSubFieldsInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutSubFieldsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BookingCreateWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserCreateNestedOneWithoutBookingsInput"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewCreateNestedOneWithoutBookingInput"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUser"
        ]
      },
      "BookingUncheckedCreateWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUserId": {
            "type": "string"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewUncheckedCreateNestedOneWithoutBookingInput"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUserId"
        ]
      },
      "BookingCreateOrConnectWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BookingCreateManySubfieldInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateManySubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateManySubfieldInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "MaintenanceScheduleCreateWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "startDate",
          "endDate",
          "status"
        ]
      },
      "MaintenanceScheduleUncheckedCreateWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "startDate",
          "endDate",
          "status"
        ]
      },
      "MaintenanceScheduleCreateOrConnectWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "MaintenanceScheduleCreateManySubfieldInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateManySubfieldInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateManySubfieldInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "FieldUpsertWithoutSubFieldsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateWithoutSubFieldsInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateWithoutSubFieldsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutSubFieldsInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutSubFieldsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "FieldUpdateToOneWithWhereWithoutSubFieldsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateWithoutSubFieldsInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateWithoutSubFieldsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FieldUpdateWithoutSubFieldsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerUpdateOneRequiredWithoutFieldsNestedInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursUpdateManyWithoutFieldNestedInput"
          }
        }
      },
      "FieldUncheckedUpdateWithoutSubFieldsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursUncheckedUpdateManyWithoutFieldNestedInput"
          }
        }
      },
      "BookingUpsertWithWhereUniqueWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithoutSubfieldInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateWithoutSubfieldInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutSubfieldInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutSubfieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "BookingUpdateWithWhereUniqueWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithoutSubfieldInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateWithoutSubfieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BookingUpdateManyWithWhereWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateManyWithoutSubfieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "MaintenanceScheduleUpsertWithWhereUniqueWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateWithoutSubfieldInput"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedUpdateWithoutSubfieldInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateWithoutSubfieldInput"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateWithoutSubfieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "MaintenanceScheduleUpdateWithWhereUniqueWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateWithoutSubfieldInput"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedUpdateWithoutSubfieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "MaintenanceScheduleUpdateManyWithWhereWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleUncheckedUpdateManyWithoutSubfieldInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "MaintenanceScheduleScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CustomUserCreateWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "account": {
            "$ref": "#/components/schemas/AccountCreateNestedOneWithoutCustomUserInput"
          }
        },
        "required": [
          "account"
        ]
      },
      "CustomUserUncheckedCreateWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "accountId": {
            "type": "string"
          }
        },
        "required": [
          "accountId"
        ]
      },
      "CustomUserCreateOrConnectWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutBookingsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SubFieldCreateWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/FieldCreateNestedOneWithoutSubFieldsInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateNestedManyWithoutSubfieldInput"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime",
          "field"
        ]
      },
      "SubFieldUncheckedCreateWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleUncheckedCreateNestedManyWithoutSubfieldInput"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime",
          "fieldId"
        ]
      },
      "SubFieldCreateOrConnectWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutBookingsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ReviewCreateWithoutBookingInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "integer"
          },
          "text": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "rating"
        ]
      },
      "ReviewUncheckedCreateWithoutBookingInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "integer"
          },
          "text": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "rating"
        ]
      },
      "ReviewCreateOrConnectWithoutBookingInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewCreateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedCreateWithoutBookingInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "CustomUserUpsertWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserUpdateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedUpdateWithoutBookingsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedCreateWithoutBookingsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "CustomUserUpdateToOneWithWhereWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserUpdateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/CustomUserUncheckedUpdateWithoutBookingsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomUserUpdateWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "account": {
            "$ref": "#/components/schemas/AccountUpdateOneRequiredWithoutCustomUserNestedInput"
          }
        }
      },
      "CustomUserUncheckedUpdateWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SubFieldUpsertWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateWithoutBookingsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutBookingsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "SubFieldUpdateToOneWithWhereWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithoutBookingsInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateWithoutBookingsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubFieldUpdateWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "field": {
            "$ref": "#/components/schemas/FieldUpdateOneRequiredWithoutSubFieldsNestedInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyWithoutSubfieldNestedInput"
          }
        }
      },
      "SubFieldUncheckedUpdateWithoutBookingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleUncheckedUpdateManyWithoutSubfieldNestedInput"
          }
        }
      },
      "ReviewUpsertWithoutBookingInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewUpdateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedUpdateWithoutBookingInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewCreateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedCreateWithoutBookingInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ReviewUpdateToOneWithWhereWithoutBookingInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewUpdateWithoutBookingInput"
              },
              {
                "$ref": "#/components/schemas/ReviewUncheckedUpdateWithoutBookingInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ReviewUpdateWithoutBookingInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "ReviewUncheckedUpdateWithoutBookingInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "BookingCreateWithoutReviewInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserCreateNestedOneWithoutBookingsInput"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldCreateNestedOneWithoutBookingsInput"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUser",
          "subfield"
        ]
      },
      "BookingUncheckedCreateWithoutReviewInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUserId": {
            "type": "string"
          },
          "subfieldId": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUserId",
          "subfieldId"
        ]
      },
      "BookingCreateOrConnectWithoutReviewInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutReviewInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutReviewInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BookingUpsertWithoutReviewInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithoutReviewInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateWithoutReviewInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateWithoutReviewInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedCreateWithoutReviewInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "BookingUpdateToOneWithWhereWithoutReviewInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingUpdateWithoutReviewInput"
              },
              {
                "$ref": "#/components/schemas/BookingUncheckedUpdateWithoutReviewInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BookingUpdateWithoutReviewInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserUpdateOneRequiredWithoutBookingsNestedInput"
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldUpdateOneRequiredWithoutBookingsNestedInput"
          }
        }
      },
      "BookingUncheckedUpdateWithoutReviewInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "FieldCreateWithoutOpeningHoursInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerCreateNestedOneWithoutFieldsInput"
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldCreateNestedManyWithoutFieldInput"
          }
        },
        "required": [
          "location",
          "owner"
        ]
      },
      "FieldUncheckedCreateWithoutOpeningHoursInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldUncheckedCreateNestedManyWithoutFieldInput"
          }
        },
        "required": [
          "location",
          "ownerId"
        ]
      },
      "FieldCreateOrConnectWithoutOpeningHoursInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOpeningHoursInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOpeningHoursInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "FieldUpsertWithoutOpeningHoursInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateWithoutOpeningHoursInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateWithoutOpeningHoursInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateWithoutOpeningHoursInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedCreateWithoutOpeningHoursInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "FieldUpdateToOneWithWhereWithoutOpeningHoursInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldUpdateWithoutOpeningHoursInput"
              },
              {
                "$ref": "#/components/schemas/FieldUncheckedUpdateWithoutOpeningHoursInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FieldUpdateWithoutOpeningHoursInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerUpdateOneRequiredWithoutFieldsNestedInput"
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldUpdateManyWithoutFieldNestedInput"
          }
        }
      },
      "FieldUncheckedUpdateWithoutOpeningHoursInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldUncheckedUpdateManyWithoutFieldNestedInput"
          }
        }
      },
      "SubFieldCreateWithoutMaintenanceSchedulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/FieldCreateNestedOneWithoutSubFieldsInput"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingCreateNestedManyWithoutSubfieldInput"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime",
          "field"
        ]
      },
      "SubFieldUncheckedCreateWithoutMaintenanceSchedulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUncheckedCreateNestedManyWithoutSubfieldInput"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime",
          "fieldId"
        ]
      },
      "SubFieldCreateOrConnectWithoutMaintenanceSchedulesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutMaintenanceSchedulesInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutMaintenanceSchedulesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SubFieldUpsertWithoutMaintenanceSchedulesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithoutMaintenanceSchedulesInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateWithoutMaintenanceSchedulesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateWithoutMaintenanceSchedulesInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedCreateWithoutMaintenanceSchedulesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "SubFieldUpdateToOneWithWhereWithoutMaintenanceSchedulesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldUpdateWithoutMaintenanceSchedulesInput"
              },
              {
                "$ref": "#/components/schemas/SubFieldUncheckedUpdateWithoutMaintenanceSchedulesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubFieldUpdateWithoutMaintenanceSchedulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "field": {
            "$ref": "#/components/schemas/FieldUpdateOneRequiredWithoutSubFieldsNestedInput"
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUpdateManyWithoutSubfieldNestedInput"
          }
        }
      },
      "SubFieldUncheckedUpdateWithoutMaintenanceSchedulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUncheckedUpdateManyWithoutSubfieldNestedInput"
          }
        }
      },
      "BookingCreateManyCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "subfieldId": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "subfieldId"
        ]
      },
      "BookingUpdateWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "subfield": {
            "$ref": "#/components/schemas/SubFieldUpdateOneRequiredWithoutBookingsNestedInput"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewUpdateOneWithoutBookingNestedInput"
          }
        }
      },
      "BookingUncheckedUpdateWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "review": {
            "$ref": "#/components/schemas/ReviewUncheckedUpdateOneWithoutBookingNestedInput"
          }
        }
      },
      "BookingUncheckedUpdateManyWithoutCustomUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "FieldCreateManyOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "location"
        ]
      },
      "FieldUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldUpdateManyWithoutFieldNestedInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursUpdateManyWithoutFieldNestedInput"
          }
        }
      },
      "FieldUncheckedUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "subFields": {
            "$ref": "#/components/schemas/SubFieldUncheckedUpdateManyWithoutFieldNestedInput"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHoursUncheckedUpdateManyWithoutFieldNestedInput"
          }
        }
      },
      "FieldUncheckedUpdateManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "SubFieldCreateManyFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          }
        },
        "required": [
          "price",
          "haveToPayFirst",
          "unitOfTime"
        ]
      },
      "OpeningHoursCreateManyFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "openTime": {
            "type": "string"
          },
          "closeTime": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          }
        },
        "required": [
          "dayOfWeek",
          "openTime",
          "closeTime"
        ]
      },
      "SubFieldUpdateWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUpdateManyWithoutSubfieldNestedInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyWithoutSubfieldNestedInput"
          }
        }
      },
      "SubFieldUncheckedUpdateWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "bookings": {
            "$ref": "#/components/schemas/BookingUncheckedUpdateManyWithoutSubfieldNestedInput"
          },
          "maintenanceSchedules": {
            "$ref": "#/components/schemas/MaintenanceScheduleUncheckedUpdateManyWithoutSubfieldNestedInput"
          }
        }
      },
      "SubFieldUncheckedUpdateManyWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              },
              {
                "$ref": "#/components/schemas/EnumSubFieldStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "OpeningHoursUpdateWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/EnumDayOfWeekFieldUpdateOperationsInput"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "OpeningHoursUncheckedUpdateWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/EnumDayOfWeekFieldUpdateOperationsInput"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "OpeningHoursUncheckedUpdateManyWithoutFieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "$ref": "#/components/schemas/EnumDayOfWeekFieldUpdateOperationsInput"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BookingCreateManySubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUserId": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUserId"
        ]
      },
      "MaintenanceScheduleCreateManySubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "startDate",
          "endDate",
          "status"
        ]
      },
      "BookingUpdateWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "customUser": {
            "$ref": "#/components/schemas/CustomUserUpdateOneRequiredWithoutBookingsNestedInput"
          },
          "review": {
            "$ref": "#/components/schemas/ReviewUpdateOneWithoutBookingNestedInput"
          }
        }
      },
      "BookingUncheckedUpdateWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "review": {
            "$ref": "#/components/schemas/ReviewUncheckedUpdateOneWithoutBookingNestedInput"
          }
        }
      },
      "BookingUncheckedUpdateManyWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/FloatFieldUpdateOperationsInput"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleUpdateWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleUncheckedUpdateWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleUncheckedUpdateManyWithoutSubfieldInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "AccountDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          }
        }
      },
      "CustomUserDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CustomUserInclude"
          }
        }
      },
      "OwnerDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OwnerInclude"
          }
        }
      },
      "FieldDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FieldInclude"
          }
        }
      },
      "SubFieldDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SubFieldInclude"
          }
        }
      },
      "BookingDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BookingInclude"
          }
        }
      },
      "ReviewDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ReviewInclude"
          }
        }
      },
      "AccountInclude": {
        "type": "object",
        "properties": {
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerDefaultArgs"
              }
            ]
          },
          "customUser": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserDefaultArgs"
              }
            ]
          }
        }
      },
      "CustomUserInclude": {
        "type": "object",
        "properties": {
          "account": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountDefaultArgs"
              }
            ]
          },
          "bookings": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BookingFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "OwnerInclude": {
        "type": "object",
        "properties": {
          "account": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountDefaultArgs"
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "FieldInclude": {
        "type": "object",
        "properties": {
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerDefaultArgs"
              }
            ]
          },
          "subFields": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldFindManyArgs"
              }
            ]
          },
          "openingHours": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "SubFieldInclude": {
        "type": "object",
        "properties": {
          "field": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldDefaultArgs"
              }
            ]
          },
          "bookings": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BookingFindManyArgs"
              }
            ]
          },
          "maintenanceSchedules": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "BookingInclude": {
        "type": "object",
        "properties": {
          "customUser": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserDefaultArgs"
              }
            ]
          },
          "subfield": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldDefaultArgs"
              }
            ]
          },
          "review": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ReviewDefaultArgs"
              }
            ]
          }
        }
      },
      "ReviewInclude": {
        "type": "object",
        "properties": {
          "booking": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BookingDefaultArgs"
              }
            ]
          }
        }
      },
      "OpeningHoursInclude": {
        "type": "object",
        "properties": {
          "field": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldDefaultArgs"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleInclude": {
        "type": "object",
        "properties": {
          "subfield": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldDefaultArgs"
              }
            ]
          }
        }
      },
      "CustomUserCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "bookings": {
            "type": "boolean"
          }
        }
      },
      "OwnerCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "boolean"
          }
        }
      },
      "FieldCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "subFields": {
            "type": "boolean"
          },
          "openingHours": {
            "type": "boolean"
          }
        }
      },
      "SubFieldCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "bookings": {
            "type": "boolean"
          },
          "maintenanceSchedules": {
            "type": "boolean"
          }
        }
      },
      "CustomUserCountOutputTypeDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserCountOutputTypeSelect"
          }
        }
      },
      "OwnerCountOutputTypeDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerCountOutputTypeSelect"
          }
        }
      },
      "FieldCountOutputTypeDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldCountOutputTypeSelect"
          }
        }
      },
      "SubFieldCountOutputTypeDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldCountOutputTypeSelect"
          }
        }
      },
      "AccountSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "username": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          },
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerDefaultArgs"
              }
            ]
          },
          "customUser": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserDefaultArgs"
              }
            ]
          }
        }
      },
      "CustomUserSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          },
          "account": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountDefaultArgs"
              }
            ]
          },
          "bookings": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BookingFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "OwnerSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          },
          "account": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountDefaultArgs"
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "FieldSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "location": {
            "type": "boolean"
          },
          "fieldDescription": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerDefaultArgs"
              }
            ]
          },
          "subFields": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldFindManyArgs"
              }
            ]
          },
          "openingHours": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "SubFieldSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "type": "boolean"
          },
          "unitOfTime": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "boolean"
          },
          "field": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldDefaultArgs"
              }
            ]
          },
          "bookings": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BookingFindManyArgs"
              }
            ]
          },
          "maintenanceSchedules": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "BookingSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "date": {
            "type": "boolean"
          },
          "beginTime": {
            "type": "boolean"
          },
          "endTime": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "payDate": {
            "type": "boolean"
          },
          "paymentMethod": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "customUserId": {
            "type": "boolean"
          },
          "customUser": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserDefaultArgs"
              }
            ]
          },
          "subfieldId": {
            "type": "boolean"
          },
          "subfield": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldDefaultArgs"
              }
            ]
          },
          "review": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ReviewDefaultArgs"
              }
            ]
          }
        }
      },
      "ReviewSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "date": {
            "type": "boolean"
          },
          "rating": {
            "type": "boolean"
          },
          "text": {
            "type": "boolean"
          },
          "bookingId": {
            "type": "boolean"
          },
          "booking": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BookingDefaultArgs"
              }
            ]
          }
        }
      },
      "OpeningHoursSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "boolean"
          },
          "openTime": {
            "type": "boolean"
          },
          "closeTime": {
            "type": "boolean"
          },
          "isOpen": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "boolean"
          },
          "field": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldDefaultArgs"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "startDate": {
            "type": "boolean"
          },
          "endDate": {
            "type": "boolean"
          },
          "reason": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "subfieldId": {
            "type": "boolean"
          },
          "subfield": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldDefaultArgs"
              }
            ]
          }
        }
      },
      "AccountCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "username": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "AccountMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "username": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          }
        }
      },
      "AccountMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "username": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          }
        }
      },
      "CustomUserCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "CustomUserMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          }
        }
      },
      "CustomUserMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          }
        }
      },
      "OwnerCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "OwnerMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          }
        }
      },
      "OwnerMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          }
        }
      },
      "FieldCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "location": {
            "type": "boolean"
          },
          "fieldDescription": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "FieldMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "location": {
            "type": "boolean"
          },
          "fieldDescription": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "FieldMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "location": {
            "type": "boolean"
          },
          "fieldDescription": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "SubFieldCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "type": "boolean"
          },
          "unitOfTime": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "SubFieldAvgAggregateInput": {
        "type": "object",
        "properties": {
          "price": {
            "type": "boolean"
          }
        }
      },
      "SubFieldSumAggregateInput": {
        "type": "object",
        "properties": {
          "price": {
            "type": "boolean"
          }
        }
      },
      "SubFieldMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "type": "boolean"
          },
          "unitOfTime": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "boolean"
          }
        }
      },
      "SubFieldMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "ranking": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "type": "boolean"
          },
          "unitOfTime": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "boolean"
          }
        }
      },
      "BookingCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "date": {
            "type": "boolean"
          },
          "beginTime": {
            "type": "boolean"
          },
          "endTime": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "payDate": {
            "type": "boolean"
          },
          "paymentMethod": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "customUserId": {
            "type": "boolean"
          },
          "subfieldId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "BookingAvgAggregateInput": {
        "type": "object",
        "properties": {
          "price": {
            "type": "boolean"
          }
        }
      },
      "BookingSumAggregateInput": {
        "type": "object",
        "properties": {
          "price": {
            "type": "boolean"
          }
        }
      },
      "BookingMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "date": {
            "type": "boolean"
          },
          "beginTime": {
            "type": "boolean"
          },
          "endTime": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "payDate": {
            "type": "boolean"
          },
          "paymentMethod": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "customUserId": {
            "type": "boolean"
          },
          "subfieldId": {
            "type": "boolean"
          }
        }
      },
      "BookingMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "date": {
            "type": "boolean"
          },
          "beginTime": {
            "type": "boolean"
          },
          "endTime": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "payDate": {
            "type": "boolean"
          },
          "paymentMethod": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "customUserId": {
            "type": "boolean"
          },
          "subfieldId": {
            "type": "boolean"
          }
        }
      },
      "ReviewCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "date": {
            "type": "boolean"
          },
          "rating": {
            "type": "boolean"
          },
          "text": {
            "type": "boolean"
          },
          "bookingId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ReviewAvgAggregateInput": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "boolean"
          }
        }
      },
      "ReviewSumAggregateInput": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "boolean"
          }
        }
      },
      "ReviewMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "date": {
            "type": "boolean"
          },
          "rating": {
            "type": "boolean"
          },
          "text": {
            "type": "boolean"
          },
          "bookingId": {
            "type": "boolean"
          }
        }
      },
      "ReviewMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "date": {
            "type": "boolean"
          },
          "rating": {
            "type": "boolean"
          },
          "text": {
            "type": "boolean"
          },
          "bookingId": {
            "type": "boolean"
          }
        }
      },
      "OpeningHoursCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "boolean"
          },
          "openTime": {
            "type": "boolean"
          },
          "closeTime": {
            "type": "boolean"
          },
          "isOpen": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "OpeningHoursMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "boolean"
          },
          "openTime": {
            "type": "boolean"
          },
          "closeTime": {
            "type": "boolean"
          },
          "isOpen": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "boolean"
          }
        }
      },
      "OpeningHoursMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "boolean"
          },
          "openTime": {
            "type": "boolean"
          },
          "closeTime": {
            "type": "boolean"
          },
          "isOpen": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "boolean"
          }
        }
      },
      "MaintenanceScheduleCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "startDate": {
            "type": "boolean"
          },
          "endDate": {
            "type": "boolean"
          },
          "reason": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "subfieldId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "MaintenanceScheduleMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "startDate": {
            "type": "boolean"
          },
          "endDate": {
            "type": "boolean"
          },
          "reason": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "subfieldId": {
            "type": "boolean"
          }
        }
      },
      "MaintenanceScheduleMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "startDate": {
            "type": "boolean"
          },
          "endDate": {
            "type": "boolean"
          },
          "reason": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "subfieldId": {
            "type": "boolean"
          }
        }
      },
      "AggregateAccount": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AccountCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AccountMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AccountMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "AccountGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AccountCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AccountMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AccountMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "username",
          "password",
          "role"
        ]
      },
      "AggregateCustomUser": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUserCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUserMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUserMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "CustomUserGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "accountId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUserCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUserMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CustomUserMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "accountId"
        ]
      },
      "AggregateOwner": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OwnerCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OwnerMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OwnerMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "OwnerGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accountId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OwnerCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OwnerMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OwnerMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "accountId"
        ]
      },
      "AggregateField": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/FieldCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/FieldMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/FieldMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "FieldGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/FieldCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/FieldMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/FieldMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "location",
          "ownerId"
        ]
      },
      "AggregateSubField": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "SubFieldGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SubFieldStatus"
          },
          "haveToPayFirst": {
            "type": "boolean"
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "price",
          "status",
          "haveToPayFirst",
          "unitOfTime",
          "fieldId"
        ]
      },
      "AggregateBooking": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "BookingGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "beginTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "customUserId": {
            "type": "string"
          },
          "subfieldId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BookingMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "date",
          "beginTime",
          "endTime",
          "price",
          "status",
          "customUserId",
          "subfieldId"
        ]
      },
      "AggregateReview": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "ReviewGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "integer"
          },
          "text": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bookingId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ReviewMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "date",
          "rating",
          "bookingId"
        ]
      },
      "AggregateOpeningHours": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "OpeningHoursGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "openTime": {
            "type": "string"
          },
          "closeTime": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          },
          "fieldId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "dayOfWeek",
          "openTime",
          "closeTime",
          "isOpen",
          "fieldId"
        ]
      },
      "AggregateMaintenanceSchedule": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "subfieldId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "startDate",
          "endDate",
          "status",
          "subfieldId"
        ]
      },
      "AccountCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "username": {
            "type": "integer"
          },
          "password": {
            "type": "integer"
          },
          "phone": {
            "type": "integer"
          },
          "email": {
            "type": "integer"
          },
          "dateOfBirth": {
            "type": "integer"
          },
          "role": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "username",
          "password",
          "phone",
          "email",
          "dateOfBirth",
          "role",
          "_all"
        ]
      },
      "AccountMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Role"
              }
            ]
          }
        }
      },
      "AccountMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "username": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "dateOfBirth": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Role"
              }
            ]
          }
        }
      },
      "CustomUserCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "accountId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "accountId",
          "_all"
        ]
      },
      "CustomUserMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CustomUserMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "OwnerCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "ranking": {
            "type": "integer"
          },
          "accountId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "ranking",
          "accountId",
          "_all"
        ]
      },
      "OwnerMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "OwnerMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "FieldCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "ranking": {
            "type": "integer"
          },
          "location": {
            "type": "integer"
          },
          "fieldDescription": {
            "type": "integer"
          },
          "ownerId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "ranking",
          "location",
          "fieldDescription",
          "ownerId",
          "_all"
        ]
      },
      "FieldMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "FieldMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SubFieldCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "ranking": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "haveToPayFirst": {
            "type": "integer"
          },
          "subfieldDescription": {
            "type": "integer"
          },
          "unitOfTime": {
            "type": "integer"
          },
          "fieldId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "ranking",
          "price",
          "status",
          "haveToPayFirst",
          "subfieldDescription",
          "unitOfTime",
          "fieldId",
          "_all"
        ]
      },
      "SubFieldAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "price": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "SubFieldSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "price": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "SubFieldMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SubFieldMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ranking": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SubFieldStatus"
              }
            ]
          },
          "haveToPayFirst": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "subfieldDescription": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "unitOfTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "BookingCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "date": {
            "type": "integer"
          },
          "beginTime": {
            "type": "integer"
          },
          "endTime": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          },
          "payDate": {
            "type": "integer"
          },
          "paymentMethod": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "customUserId": {
            "type": "integer"
          },
          "subfieldId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "date",
          "beginTime",
          "endTime",
          "price",
          "payDate",
          "paymentMethod",
          "status",
          "customUserId",
          "subfieldId",
          "_all"
        ]
      },
      "BookingAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "price": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "BookingSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "price": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "BookingMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "BookingMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "beginTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "payDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "customUserId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ReviewCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "date": {
            "type": "integer"
          },
          "rating": {
            "type": "integer"
          },
          "text": {
            "type": "integer"
          },
          "bookingId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "date",
          "rating",
          "text",
          "bookingId",
          "_all"
        ]
      },
      "ReviewAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "rating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "ReviewSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "rating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "ReviewMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bookingId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ReviewMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "date": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "rating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "text": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bookingId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "OpeningHoursCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "dayOfWeek": {
            "type": "integer"
          },
          "openTime": {
            "type": "integer"
          },
          "closeTime": {
            "type": "integer"
          },
          "isOpen": {
            "type": "integer"
          },
          "fieldId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "dayOfWeek",
          "openTime",
          "closeTime",
          "isOpen",
          "fieldId",
          "_all"
        ]
      },
      "OpeningHoursMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/DayOfWeek"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "OpeningHoursMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "dayOfWeek": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/DayOfWeek"
              }
            ]
          },
          "openTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "closeTime": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "isOpen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "fieldId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "startDate": {
            "type": "integer"
          },
          "endDate": {
            "type": "integer"
          },
          "reason": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "subfieldId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "createdAt",
          "updatedAt",
          "deleted",
          "startDate",
          "endDate",
          "reason",
          "status",
          "subfieldId",
          "_all"
        ]
      },
      "MaintenanceScheduleMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "MaintenanceScheduleMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "startDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endDate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "subfieldId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "_Meta": {
        "type": "object",
        "description": "Meta information about the request or response",
        "properties": {
          "serialization": {
            "description": "Serialization metadata"
          }
        },
        "additionalProperties": true
      },
      "_Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "prisma": {
                "type": "boolean",
                "description": "Indicates if the error occurred during a Prisma call"
              },
              "rejectedByPolicy": {
                "type": "boolean",
                "description": "Indicates if the error was due to rejection by a policy"
              },
              "code": {
                "type": "string",
                "description": "Prisma error code. Only available when \"prisma\" field is true."
              },
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "reason": {
                "type": "string",
                "description": "Detailed error reason"
              },
              "zodErrors": {
                "type": "object",
                "additionalProperties": true,
                "description": "Zod validation errors if the error is due to data validation failure"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "BatchPayload": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "AccountCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "data": {
            "$ref": "#/components/schemas/AccountCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/AccountUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/AccountUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/AccountCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/AccountUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/AccountOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/AccountMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/AccountMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/AccountOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/AccountScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/AccountMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/AccountMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CustomUserInclude"
          },
          "data": {
            "$ref": "#/components/schemas/CustomUserCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomUserCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomUserCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CustomUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CustomUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CustomUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CustomUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/CustomUserUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/CustomUserUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CustomUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/CustomUserCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/CustomUserUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CustomUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CustomUserSelect"
          },
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/CustomUserOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/CustomUserWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/CustomUserMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/CustomUserMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CustomUserGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CustomUserWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/CustomUserOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/CustomUserScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/CustomUserScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CustomUserCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/CustomUserMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/CustomUserMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OwnerInclude"
          },
          "data": {
            "$ref": "#/components/schemas/OwnerCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnerCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OwnerCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OwnerInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OwnerInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OwnerInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OwnerInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/OwnerUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/OwnerUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OwnerInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/OwnerCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/OwnerUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OwnerInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OwnerSelect"
          },
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/OwnerOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/OwnerWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/OwnerMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/OwnerMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OwnerGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OwnerWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/OwnerOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/OwnerScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/OwnerScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OwnerCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/OwnerMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/OwnerMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FieldInclude"
          },
          "data": {
            "$ref": "#/components/schemas/FieldCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FieldCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/FieldUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/FieldUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/FieldCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/FieldUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FieldSelect"
          },
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/FieldOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/FieldWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/FieldMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/FieldMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FieldGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FieldWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/FieldOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/FieldScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/FieldScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FieldCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/FieldMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/FieldMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SubFieldInclude"
          },
          "data": {
            "$ref": "#/components/schemas/SubFieldCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubFieldCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubFieldCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SubFieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SubFieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SubFieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SubFieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/SubFieldUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/SubFieldUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SubFieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/SubFieldCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/SubFieldUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SubFieldInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SubFieldSelect"
          },
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SubFieldOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/SubFieldWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SubFieldMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SubFieldMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/SubFieldSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/SubFieldAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SubFieldGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SubFieldWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SubFieldOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/SubFieldScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/SubFieldScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SubFieldCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SubFieldMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SubFieldMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/SubFieldSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/SubFieldAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BookingInclude"
          },
          "data": {
            "$ref": "#/components/schemas/BookingCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BookingInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BookingInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BookingInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BookingInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/BookingUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/BookingUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BookingInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/BookingCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/BookingUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BookingInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BookingSelect"
          },
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/BookingOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/BookingWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BookingCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/BookingMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/BookingMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/BookingSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/BookingAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BookingGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BookingWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/BookingOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/BookingScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/BookingScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BookingCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/BookingMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/BookingMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/BookingSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/BookingAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ReviewInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ReviewCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReviewCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReviewCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ReviewInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ReviewInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ReviewInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ReviewInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ReviewUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ReviewUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ReviewInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ReviewCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ReviewUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ReviewInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ReviewSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ReviewOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ReviewWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ReviewCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ReviewMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ReviewMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ReviewSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ReviewAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ReviewGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ReviewWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ReviewOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/ReviewScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ReviewScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ReviewCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ReviewMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ReviewMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ReviewSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ReviewAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OpeningHoursSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OpeningHoursInclude"
          },
          "data": {
            "$ref": "#/components/schemas/OpeningHoursCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpeningHoursCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpeningHoursCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OpeningHoursSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OpeningHoursInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OpeningHoursSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OpeningHoursInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OpeningHoursSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OpeningHoursInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OpeningHoursSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OpeningHoursInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/OpeningHoursUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/OpeningHoursUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OpeningHoursSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OpeningHoursInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/OpeningHoursCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/OpeningHoursUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OpeningHoursSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OpeningHoursInclude"
          },
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OpeningHoursSelect"
          },
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/OpeningHoursOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/OpeningHoursWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/OpeningHoursMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/OpeningHoursMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "OpeningHoursGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OpeningHoursWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/OpeningHoursOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/OpeningHoursScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/OpeningHoursScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpeningHoursCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/OpeningHoursMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/OpeningHoursMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MaintenanceScheduleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/MaintenanceScheduleInclude"
          },
          "data": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MaintenanceScheduleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/MaintenanceScheduleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MaintenanceScheduleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/MaintenanceScheduleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MaintenanceScheduleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/MaintenanceScheduleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MaintenanceScheduleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/MaintenanceScheduleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/MaintenanceScheduleUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MaintenanceScheduleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/MaintenanceScheduleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/MaintenanceScheduleCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/MaintenanceScheduleUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MaintenanceScheduleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/MaintenanceScheduleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MaintenanceScheduleSelect"
          },
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/MaintenanceScheduleOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/MaintenanceScheduleMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/MaintenanceScheduleMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MaintenanceScheduleGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MaintenanceScheduleWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/MaintenanceScheduleOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/MaintenanceScheduleScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/MaintenanceScheduleScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/MaintenanceScheduleCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/MaintenanceScheduleMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/MaintenanceScheduleMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      }
    }
  },
  "paths": {
    "/account/create": {
      "post": {
        "operationId": "createAccount",
        "description": "Create a new Account",
        "tags": [
          "account"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateArgs"
              }
            }
          }
        }
      }
    },
    "/account/createMany": {
      "post": {
        "operationId": "createManyAccount",
        "description": "Create several Account",
        "tags": [
          "account"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/account/findUnique": {
      "get": {
        "operationId": "findUniqueAccount",
        "description": "Find one unique Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/account/findFirst": {
      "get": {
        "operationId": "findFirstAccount",
        "description": "Find the first Account matching the given condition",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/account/findMany": {
      "get": {
        "operationId": "findManyAccount",
        "description": "Find a list of Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/account/update": {
      "patch": {
        "operationId": "updateAccount",
        "description": "Update a Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/account/updateMany": {
      "patch": {
        "operationId": "updateManyAccount",
        "description": "Update Accounts matching the given condition",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/account/upsert": {
      "post": {
        "operationId": "upsertAccount",
        "description": "Upsert a Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/account/delete": {
      "delete": {
        "operationId": "deleteAccount",
        "description": "Delete one unique Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/account/deleteMany": {
      "delete": {
        "operationId": "deleteManyAccount",
        "description": "Delete Accounts matching the given condition",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/account/count": {
      "get": {
        "operationId": "countAccount",
        "description": "Find a list of Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/AccountCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/account/aggregate": {
      "get": {
        "operationId": "aggregateAccount",
        "description": "Aggregate Accounts",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/account/groupBy": {
      "get": {
        "operationId": "groupByAccount",
        "description": "Group Accounts by fields",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/customUser/create": {
      "post": {
        "operationId": "createCustomUser",
        "description": "Create a new CustomUser",
        "tags": [
          "customUser"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CustomUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomUserCreateArgs"
              }
            }
          }
        }
      }
    },
    "/customUser/createMany": {
      "post": {
        "operationId": "createManyCustomUser",
        "description": "Create several CustomUser",
        "tags": [
          "customUser"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomUserCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/customUser/findUnique": {
      "get": {
        "operationId": "findUniqueCustomUser",
        "description": "Find one unique CustomUser",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CustomUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/customUser/findFirst": {
      "get": {
        "operationId": "findFirstCustomUser",
        "description": "Find the first CustomUser matching the given condition",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CustomUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/customUser/findMany": {
      "get": {
        "operationId": "findManyCustomUser",
        "description": "Find a list of CustomUser",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomUser"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/customUser/update": {
      "patch": {
        "operationId": "updateCustomUser",
        "description": "Update a CustomUser",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CustomUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomUserUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/customUser/updateMany": {
      "patch": {
        "operationId": "updateManyCustomUser",
        "description": "Update CustomUsers matching the given condition",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomUserUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/customUser/upsert": {
      "post": {
        "operationId": "upsertCustomUser",
        "description": "Upsert a CustomUser",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CustomUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomUserUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/customUser/delete": {
      "delete": {
        "operationId": "deleteCustomUser",
        "description": "Delete one unique CustomUser",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CustomUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/customUser/deleteMany": {
      "delete": {
        "operationId": "deleteManyCustomUser",
        "description": "Delete CustomUsers matching the given condition",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/customUser/count": {
      "get": {
        "operationId": "countCustomUser",
        "description": "Find a list of CustomUser",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/CustomUserCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/customUser/aggregate": {
      "get": {
        "operationId": "aggregateCustomUser",
        "description": "Aggregate CustomUsers",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateCustomUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/customUser/groupBy": {
      "get": {
        "operationId": "groupByCustomUser",
        "description": "Group CustomUsers by fields",
        "tags": [
          "customUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomUserGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/owner/create": {
      "post": {
        "operationId": "createOwner",
        "description": "Create a new Owner",
        "tags": [
          "owner"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Owner",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerCreateArgs"
              }
            }
          }
        }
      }
    },
    "/owner/createMany": {
      "post": {
        "operationId": "createManyOwner",
        "description": "Create several Owner",
        "tags": [
          "owner"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/owner/findUnique": {
      "get": {
        "operationId": "findUniqueOwner",
        "description": "Find one unique Owner",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Owner",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/owner/findFirst": {
      "get": {
        "operationId": "findFirstOwner",
        "description": "Find the first Owner matching the given condition",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Owner",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/owner/findMany": {
      "get": {
        "operationId": "findManyOwner",
        "description": "Find a list of Owner",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Owner"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/owner/update": {
      "patch": {
        "operationId": "updateOwner",
        "description": "Update a Owner",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Owner",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/owner/updateMany": {
      "patch": {
        "operationId": "updateManyOwner",
        "description": "Update Owners matching the given condition",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/owner/upsert": {
      "post": {
        "operationId": "upsertOwner",
        "description": "Upsert a Owner",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Owner",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/owner/delete": {
      "delete": {
        "operationId": "deleteOwner",
        "description": "Delete one unique Owner",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Owner",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/owner/deleteMany": {
      "delete": {
        "operationId": "deleteManyOwner",
        "description": "Delete Owners matching the given condition",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/owner/count": {
      "get": {
        "operationId": "countOwner",
        "description": "Find a list of Owner",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/OwnerCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/owner/aggregate": {
      "get": {
        "operationId": "aggregateOwner",
        "description": "Aggregate Owners",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateOwner",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/owner/groupBy": {
      "get": {
        "operationId": "groupByOwner",
        "description": "Group Owners by fields",
        "tags": [
          "owner"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OwnerGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/field/create": {
      "post": {
        "operationId": "createField",
        "description": "Create a new Field",
        "tags": [
          "field"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Field",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateArgs"
              }
            }
          }
        }
      }
    },
    "/field/createMany": {
      "post": {
        "operationId": "createManyField",
        "description": "Create several Field",
        "tags": [
          "field"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/field/findUnique": {
      "get": {
        "operationId": "findUniqueField",
        "description": "Find one unique Field",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Field",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/field/findFirst": {
      "get": {
        "operationId": "findFirstField",
        "description": "Find the first Field matching the given condition",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Field",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/field/findMany": {
      "get": {
        "operationId": "findManyField",
        "description": "Find a list of Field",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Field"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/field/update": {
      "patch": {
        "operationId": "updateField",
        "description": "Update a Field",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Field",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/field/updateMany": {
      "patch": {
        "operationId": "updateManyField",
        "description": "Update Fields matching the given condition",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/field/upsert": {
      "post": {
        "operationId": "upsertField",
        "description": "Upsert a Field",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Field",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/field/delete": {
      "delete": {
        "operationId": "deleteField",
        "description": "Delete one unique Field",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Field",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/field/deleteMany": {
      "delete": {
        "operationId": "deleteManyField",
        "description": "Delete Fields matching the given condition",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/field/count": {
      "get": {
        "operationId": "countField",
        "description": "Find a list of Field",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/FieldCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/field/aggregate": {
      "get": {
        "operationId": "aggregateField",
        "description": "Aggregate Fields",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateField",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/field/groupBy": {
      "get": {
        "operationId": "groupByField",
        "description": "Group Fields by fields",
        "tags": [
          "field"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FieldGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/subField/create": {
      "post": {
        "operationId": "createSubField",
        "description": "Create a new SubField",
        "tags": [
          "subField"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubField",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubFieldCreateArgs"
              }
            }
          }
        }
      }
    },
    "/subField/createMany": {
      "post": {
        "operationId": "createManySubField",
        "description": "Create several SubField",
        "tags": [
          "subField"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubFieldCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/subField/findUnique": {
      "get": {
        "operationId": "findUniqueSubField",
        "description": "Find one unique SubField",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubField",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubFieldFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/subField/findFirst": {
      "get": {
        "operationId": "findFirstSubField",
        "description": "Find the first SubField matching the given condition",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubField",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubFieldFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/subField/findMany": {
      "get": {
        "operationId": "findManySubField",
        "description": "Find a list of SubField",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubField"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubFieldFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/subField/update": {
      "patch": {
        "operationId": "updateSubField",
        "description": "Update a SubField",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubField",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubFieldUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/subField/updateMany": {
      "patch": {
        "operationId": "updateManySubField",
        "description": "Update SubFields matching the given condition",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubFieldUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/subField/upsert": {
      "post": {
        "operationId": "upsertSubField",
        "description": "Upsert a SubField",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubField",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubFieldUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/subField/delete": {
      "delete": {
        "operationId": "deleteSubField",
        "description": "Delete one unique SubField",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SubField",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubFieldDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/subField/deleteMany": {
      "delete": {
        "operationId": "deleteManySubField",
        "description": "Delete SubFields matching the given condition",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubFieldDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/subField/count": {
      "get": {
        "operationId": "countSubField",
        "description": "Find a list of SubField",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/SubFieldCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubFieldCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/subField/aggregate": {
      "get": {
        "operationId": "aggregateSubField",
        "description": "Aggregate SubFields",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateSubField",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubFieldAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/subField/groupBy": {
      "get": {
        "operationId": "groupBySubField",
        "description": "Group SubFields by fields",
        "tags": [
          "subField"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubFieldGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubFieldGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/booking/create": {
      "post": {
        "operationId": "createBooking",
        "description": "Create a new Booking",
        "tags": [
          "booking"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Booking",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateArgs"
              }
            }
          }
        }
      }
    },
    "/booking/createMany": {
      "post": {
        "operationId": "createManyBooking",
        "description": "Create several Booking",
        "tags": [
          "booking"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/booking/findUnique": {
      "get": {
        "operationId": "findUniqueBooking",
        "description": "Find one unique Booking",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Booking",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/booking/findFirst": {
      "get": {
        "operationId": "findFirstBooking",
        "description": "Find the first Booking matching the given condition",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Booking",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/booking/findMany": {
      "get": {
        "operationId": "findManyBooking",
        "description": "Find a list of Booking",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Booking"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/booking/update": {
      "patch": {
        "operationId": "updateBooking",
        "description": "Update a Booking",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Booking",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/booking/updateMany": {
      "patch": {
        "operationId": "updateManyBooking",
        "description": "Update Bookings matching the given condition",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/booking/upsert": {
      "post": {
        "operationId": "upsertBooking",
        "description": "Upsert a Booking",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Booking",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/booking/delete": {
      "delete": {
        "operationId": "deleteBooking",
        "description": "Delete one unique Booking",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Booking",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/booking/deleteMany": {
      "delete": {
        "operationId": "deleteManyBooking",
        "description": "Delete Bookings matching the given condition",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/booking/count": {
      "get": {
        "operationId": "countBooking",
        "description": "Find a list of Booking",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/BookingCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/booking/aggregate": {
      "get": {
        "operationId": "aggregateBooking",
        "description": "Aggregate Bookings",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateBooking",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/booking/groupBy": {
      "get": {
        "operationId": "groupByBooking",
        "description": "Group Bookings by fields",
        "tags": [
          "booking"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookingGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/review/create": {
      "post": {
        "operationId": "createReview",
        "description": "Create a new Review",
        "tags": [
          "review"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Review",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewCreateArgs"
              }
            }
          }
        }
      }
    },
    "/review/createMany": {
      "post": {
        "operationId": "createManyReview",
        "description": "Create several Review",
        "tags": [
          "review"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/review/findUnique": {
      "get": {
        "operationId": "findUniqueReview",
        "description": "Find one unique Review",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Review",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/review/findFirst": {
      "get": {
        "operationId": "findFirstReview",
        "description": "Find the first Review matching the given condition",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Review",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/review/findMany": {
      "get": {
        "operationId": "findManyReview",
        "description": "Find a list of Review",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Review"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/review/update": {
      "patch": {
        "operationId": "updateReview",
        "description": "Update a Review",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Review",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/review/updateMany": {
      "patch": {
        "operationId": "updateManyReview",
        "description": "Update Reviews matching the given condition",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/review/upsert": {
      "post": {
        "operationId": "upsertReview",
        "description": "Upsert a Review",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Review",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/review/delete": {
      "delete": {
        "operationId": "deleteReview",
        "description": "Delete one unique Review",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Review",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/review/deleteMany": {
      "delete": {
        "operationId": "deleteManyReview",
        "description": "Delete Reviews matching the given condition",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/review/count": {
      "get": {
        "operationId": "countReview",
        "description": "Find a list of Review",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ReviewCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/review/aggregate": {
      "get": {
        "operationId": "aggregateReview",
        "description": "Aggregate Reviews",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateReview",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/review/groupBy": {
      "get": {
        "operationId": "groupByReview",
        "description": "Group Reviews by fields",
        "tags": [
          "review"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReviewGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/openingHours/create": {
      "post": {
        "operationId": "createOpeningHours",
        "description": "Create a new OpeningHours",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OpeningHours",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpeningHoursCreateArgs"
              }
            }
          }
        }
      }
    },
    "/openingHours/createMany": {
      "post": {
        "operationId": "createManyOpeningHours",
        "description": "Create several OpeningHours",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpeningHoursCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/openingHours/findUnique": {
      "get": {
        "operationId": "findUniqueOpeningHours",
        "description": "Find one unique OpeningHours",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OpeningHours",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpeningHoursFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/openingHours/findFirst": {
      "get": {
        "operationId": "findFirstOpeningHours",
        "description": "Find the first OpeningHours matching the given condition",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OpeningHours",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpeningHoursFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/openingHours/findMany": {
      "get": {
        "operationId": "findManyOpeningHours",
        "description": "Find a list of OpeningHours",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OpeningHours"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpeningHoursFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/openingHours/update": {
      "patch": {
        "operationId": "updateOpeningHours",
        "description": "Update a OpeningHours",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OpeningHours",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpeningHoursUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/openingHours/updateMany": {
      "patch": {
        "operationId": "updateManyOpeningHours",
        "description": "Update OpeningHourss matching the given condition",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpeningHoursUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/openingHours/upsert": {
      "post": {
        "operationId": "upsertOpeningHours",
        "description": "Upsert a OpeningHours",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OpeningHours",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpeningHoursUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/openingHours/delete": {
      "delete": {
        "operationId": "deleteOpeningHours",
        "description": "Delete one unique OpeningHours",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OpeningHours",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpeningHoursDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/openingHours/deleteMany": {
      "delete": {
        "operationId": "deleteManyOpeningHours",
        "description": "Delete OpeningHourss matching the given condition",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpeningHoursDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/openingHours/count": {
      "get": {
        "operationId": "countOpeningHours",
        "description": "Find a list of OpeningHours",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/OpeningHoursCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpeningHoursCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/openingHours/aggregate": {
      "get": {
        "operationId": "aggregateOpeningHours",
        "description": "Aggregate OpeningHourss",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateOpeningHours",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpeningHoursAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/openingHours/groupBy": {
      "get": {
        "operationId": "groupByOpeningHours",
        "description": "Group OpeningHourss by fields",
        "tags": [
          "openingHours"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OpeningHoursGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpeningHoursGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/maintenanceSchedule/create": {
      "post": {
        "operationId": "createMaintenanceSchedule",
        "description": "Create a new MaintenanceSchedule",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MaintenanceSchedule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateArgs"
              }
            }
          }
        }
      }
    },
    "/maintenanceSchedule/createMany": {
      "post": {
        "operationId": "createManyMaintenanceSchedule",
        "description": "Create several MaintenanceSchedule",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceScheduleCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/maintenanceSchedule/findUnique": {
      "get": {
        "operationId": "findUniqueMaintenanceSchedule",
        "description": "Find one unique MaintenanceSchedule",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MaintenanceSchedule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceScheduleFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/maintenanceSchedule/findFirst": {
      "get": {
        "operationId": "findFirstMaintenanceSchedule",
        "description": "Find the first MaintenanceSchedule matching the given condition",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MaintenanceSchedule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceScheduleFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/maintenanceSchedule/findMany": {
      "get": {
        "operationId": "findManyMaintenanceSchedule",
        "description": "Find a list of MaintenanceSchedule",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MaintenanceSchedule"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceScheduleFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/maintenanceSchedule/update": {
      "patch": {
        "operationId": "updateMaintenanceSchedule",
        "description": "Update a MaintenanceSchedule",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MaintenanceSchedule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/maintenanceSchedule/updateMany": {
      "patch": {
        "operationId": "updateManyMaintenanceSchedule",
        "description": "Update MaintenanceSchedules matching the given condition",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceScheduleUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/maintenanceSchedule/upsert": {
      "post": {
        "operationId": "upsertMaintenanceSchedule",
        "description": "Upsert a MaintenanceSchedule",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MaintenanceSchedule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceScheduleUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/maintenanceSchedule/delete": {
      "delete": {
        "operationId": "deleteMaintenanceSchedule",
        "description": "Delete one unique MaintenanceSchedule",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MaintenanceSchedule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceScheduleDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/maintenanceSchedule/deleteMany": {
      "delete": {
        "operationId": "deleteManyMaintenanceSchedule",
        "description": "Delete MaintenanceSchedules matching the given condition",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceScheduleDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/maintenanceSchedule/count": {
      "get": {
        "operationId": "countMaintenanceSchedule",
        "description": "Find a list of MaintenanceSchedule",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/MaintenanceScheduleCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceScheduleCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/maintenanceSchedule/aggregate": {
      "get": {
        "operationId": "aggregateMaintenanceSchedule",
        "description": "Aggregate MaintenanceSchedules",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateMaintenanceSchedule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceScheduleAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/maintenanceSchedule/groupBy": {
      "get": {
        "operationId": "groupByMaintenanceSchedule",
        "description": "Group MaintenanceSchedules by fields",
        "tags": [
          "maintenanceSchedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MaintenanceScheduleGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceScheduleGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    }
  }
}